<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.web.www.repository.MemberDAO">
  <!-- 멤버등록 -->
	<insert id="insertMember">
		insert into member(member_id, member_pwd, 
		member_alias, member_name, member_email,
		member_address, member_address_detail,
		member_phone_num, member_terms1, member_terms2, member_terms3)
			
		values(#{memberId}, #{memberPwd}, #{memberAlias}, #{memberName}, #{memberEmail},
	  	#{memberAddress}, #{memberAddressDetail}, #{memberPhoneNum}, 
	  	#{memberTerms1},#{memberTerms2},#{memberTerms3})
	</insert>
	
	<select id="getUser" resultType="com.web.www.domain.member.MemberVO">
		select * from member where member_id = #{memberId} and member_type = #{memberType}
	</select>
	
	<!-- 멤버수정 -->
	<update id="socialModifyMember">
		update member set member_alias = #{memberAlias}, member_email = #{memberEmail}, 
		member_phone_num = #{memberPhoneNum}, member_address = #{memberAddress}, member_address_detail = #{memberAddressDetail}
		where member_id = #{memberId} and member_type = #{memberType}
	</update>
	
	<update id="normalModifyMember">
		update member set member_alias = #{memberAlias},
		member_phone_num = #{memberPhoneNum}, member_address = #{memberAddress}, member_address_detail = #{memberAddressDetail}
		where member_email = #{memberEmail} and member_type = #{memberType}
	</update>
	
	<!-- 비밀번호 수정 -->
	<update id="updatePwd">
		update member set member_pwd = #{changePwd} where member_num = #{memberNum}
	</update>
	
	
	<select id="checkId" resultType="int">
		select count(member_id) from member where member_id = #{memberId}
	</select>
	
	<select id="checkEmail" resultType="int">
		select count(member_email) from member where member_email = #{memberEmail} and member_type = 'normal'
	</select>
	
	<!-- 회원 탈퇴 -->
	<update id="memberLeave">
		update member set member_del = 'Y' where member_num = #{memberNum} and member_id = #{memberId}
	</update>
	
	<!-- 탈퇴 이후 로그 저장 -->
	<insert id="memberLeaveLegAt">
		insert into member_leave(member_num, member_type)
		value(#{memberNum}, #{memberType})
	</insert>
	
	<!-- 아이디 비번 찾기 -->
	<select id="findId" resultType="string">
		select member_id from member 
		where member_email = #{memberEmail} and member_name = #{memberName} and member_type = 'normal'
	</select>
	
	<select id="findPwd" resultType="int">
		select count(*) from member
		where member_id = #{memberId} and member_email = #{memberEmail} and member_type = 'normal'
	</select>
	
	<update id="findPwdUpdate">
		update member set member_pwd = #{memberPwd} 
		where member_id = #{memberId} and member_email = #{memberEmail} and member_type = 'normal'
	</update>
	
	<!-- 시큐리티 userDetail클래스 DB 선접근 mapper -->
	<select id="selectMemberId" resultType="com.web.www.domain.member.MemberVO">
		select * from member where member_id = #{memberId} and member_del = 'N'
	</select>
	
	<select id="selectAuths" resultType="com.web.www.security.AuthVO">
		select * from auth_member where member_id = #{memberId}
	</select>
	
	<!-- 시큐리티 LastLogin 날짜 갱신 -->
	<update id="updateLastLogin">
		update member set member_last_at = now() where member_id = #{memberId}
	</update>
	
	<!-- 시큐리티 권한부여 -->
	<insert id="insertAuthInit">
		insert into auth_member(member_id, auth)
		values(#{memberId}, 'ROLE_USER')
	</insert>

	<!-- 시큐리티 Oauth 유저(소셜) 선접근 -->
	<select id="socialSearch" resultType="com.web.www.domain.member.MemberVO">
		select * from member where member_id = #{memberId}
	</select>
	
	<select id="socialLeaveSearch" resultType="int">
		select count(*) from member where member_id = #{memberId} and member_del = 'Y'
	</select>
	
	<!-- 시큐리티 Oauth 유저(소셜) 가입 -->
	<insert id="socialRegister">
		insert into member(member_id, member_pwd,
		member_alias, member_name, member_email,
		member_phone_num, member_type)
			
		values(#{memberId}, #{memberPwd}, #{memberAlias}, #{memberName}, #{memberEmail},
	  	#{memberPhoneNum}, #{memberType})
	</insert>
	
	<update id="cdCheck">
		update member set member_terms3 = #{memberTerms3} where member_id = #{memberId}
	</update>
	
	<!-- ************************************************ -->
	<!-- 쿠폰관련 -->
	<!-- 쿠폰관련 -->
	<!-- 쿠폰관련 -->
	<!-- 쿠폰관련 -->
	<!-- ************************************************ -->
	<select id="couponCheck" resultType="int">
		select count(*) from coupon_system
	</select>
	<!-- 쿠폰 갱신 -->
	<insert id="couponCreate">
		insert into coupon_system(coupon_code, coupon_admin_check, coupon_search, coupon_dupli, 
		coupon_day, coupon_name, coupon_int, coupon_rate)
		
		value(#{couponCode}, #{couponAdminCheck}, #{couponSearch}, #{couponDupli}, 
		#{couponDay}, #{couponName}, #{couponInt}, #{couponRate})
	</insert>

	<!-- 유저 쿠폰 체크 -->
	<select id="userCouponCheck" resultType="int">
		select count(*) from coupon where member_num = #{memberNum} and coupon_code = #{couponCode}
	</select>
	
	<select id="userCouponDate" resultType="int">
		select coupon_day from coupon_system where coupon_code = #{couponCode}
	</select>
	
	<!-- 신규유저 쿠폰 생성 -->

	<!-- 유저 쿠폰 생성 -->
	<insert id="userCouponAdd">
		insert into coupon(member_num, coupon_code, coupon_start, coupon_end)
		value (#{memberNum}, #{couponCode}, #{couponStart}, #{couponEnd})
	</insert>

	<!-- 유저 쿠폰 리스트 조회 (+ end날짜가 지났으면 제외 조건문까지 ) -->
	<select id="getUserCouponList" resultType="com.web.www.domain.coupon.CouponGetDTO">
		SELECT c.*, cs.coupon_name, cs.coupon_int, cs.coupon_rate
	    FROM coupon c
	    JOIN coupon_system cs ON c.coupon_code = cs.coupon_code
	    WHERE c.member_num = #{member_num}
     	AND (c.coupon_end IS NULL OR c.coupon_end >= NOW())and c.coupon_member_check = 'Y';
	</select>
	<update id="useCoupon">
		update coupon set coupon_member_check = 'N' where member_num =#{memberNum} AND coupon_code = #{couponCode}
	</update>
	
	<!-- 최근에 가입한 멤버조회하기 -->
	<select id="recentMember" resultType="long">
		select max(member_num) from member where member_del = 'N' order by member_reg_at desc;
	</select>
	
	<!-- 시스템 알람 on/off 체크 -->
	<select id="getMemberMasCheck" resultType="string">
		select member_alarm_system from member where member_num = #{memberNum}		
	</select>

	<!-- 멤버 등급 조회 -->
	<select id="getMemberGrade" resultType="string">
		select member_grade from member where member_num = ${memberNum}
	</select>
	
	
	
	
	
	
	
	
	<!-- #################영수증 관련 입니다################# -->
	<!-- #################영수증 관련 입니다################# -->
	<!-- #################영수증 관련 입니다################# -->

	

	<!-- 영수증 조회 -->
	<select id="getReceipt" resultType="com.web.www.domain.pay.ReceiptDTO">
		select * from pay where pay_merchant_uid = #{payMerchantUid}
	</select>

	<select id="getHotelReceipt" resultType="com.web.www.domain.pay.ReceiptDTO">
		select hotel_reserve_stay_start, hotel_reserve_stay_end, hotel_reserve_people, hotel_reserve_child from room_info
		where pay_merchant_uid = #{payMerchantUid}
	</select>


	<!-- 환불영수증일때 가져오기  -->
	<select id="getRefundReceipt" resultType="com.web.www.domain.pay.ReceiptDTO">
		select * from refund where pay_merchant_uid = #{payMerchantUid}
	</select>
	
	
  </mapper>